pip install Flask requests

from flask import Flask, render_template
import requests

app = Flask(__name__)

# API URL to get cryptocurrency exchange rates
API_URL = "https://api.coingecko.com/api/v3/simple/price"
CRYPTO_IDS = ["bitcoin", "ethereum", "binancecoin", "cardano", "solana"]
CURRENCIES = ["usd"]

@app.route('/')
def index():
    exchange_rates = get_exchange_rates()
    return render_template('index.html', exchange_rates=exchange_rates)

def get_exchange_rates():
    exchange_rates = {}
    for crypto_id in CRYPTO_IDS:
        response = requests.get(API_URL, params={
            'ids': crypto_id,
            'vs_currencies': ','.join(CURRENCIES)
        })
        if response.status_code == 200:
            data = response.json()
            exchange_rates[crypto_id] = data[crypto_id]
    return exchange_rates

python app.py

if __name__ == '__main__':
    app.run(debug=True)

<!DOCTYPE html>
<html>
<head>
    <title>Cryptocurrency Exchange Rates</title>
</head>
<body>
    <h1>Cryptocurrency Exchange Rates</h1>
    <table>
        <tr>
            <th>Cryptocurrency</th>
            <th>Exchange Rate (USD)</th>
        </tr>
        {% for crypto_id, rate in exchange_rates.items() %}
        <tr>
            <td>{{ crypto_id }}</td>
            <td>{{ rate.usd }}</td>
        </tr>
        {% endfor %}
    </table>
</body>
</html>

import unittest
from app import app

class TestApp(unittest.TestCase):

    def setUp(self):
        app.testing = True
        self.app = app.test_client()

    def test_template_rendering(self):
        response = self.app.get('/')
        self.assertEqual(response.status_code, 200)
        self.assertIn(b'<h1>Cryptocurrency Exchange Rates</h1>', response.data)
        self.assertIn(b'<table>', response.data)
        self.assertIn(b'Exchange Rate (USD)', response.data)

if __name__ == '__main__':
    unittest.main()

python test_app.py

from flask import Flask, render_template
import requests

app = Flask(__name__)

# API URL to get cryptocurrency exchange rates
API_URL = "https://api.coingecko.com/api/v3/simple/price"
CRYPTO_IDS = ["bitcoin", "ethereum", "binancecoin", "cardano", "solana"]
CURRENCIES = ["usd"]

@app.route('/')
def index():
    try:
        exchange_rates = get_exchange_rates()
        return render_template('index.html', exchange_rates=exchange_rates)
    except Exception as e:
        error_message = f"An error occurred: {e}"
        return render_template('error.html', error_message=error_message)

def get_exchange_rates():
    exchange_rates = {}
    for crypto_id in CRYPTO_IDS:
        response = requests.get(API_URL, params={
            'ids': crypto_id,
            'vs_currencies': ','.join(CURRENCIES)
        })
        response.raise_for_status()  # Raise an exception for non-200 responses
        data = response.json()
        exchange_rates[crypto_id] = data[crypto_id]
    return exchange_rates

if __name__ == '__main__':
    app.run(debug=True)



